apiVersion: apps/v1
kind: Deployment
metadata:
  name: hypervector-app
  namespace: hypervector
  labels:
    app: hypervector
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hypervector
  template:
    metadata:
      labels:
        app: hypervector
    spec:
      containers:
      - name: hypervector
        image: hypervector-lab:latest
        ports:
        - containerPort: 8000
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: HDC_LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import hypervector; print('OK')"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import hypervector; print('OK')"
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: hypervector-service
  namespace: hypervector
spec:
  selector:
    app: hypervector
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hypervector-hpa
  namespace: hypervector
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hypervector-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
