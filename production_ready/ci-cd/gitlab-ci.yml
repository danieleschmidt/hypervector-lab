stages:
  - test
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  KUBE_NAMESPACE: hypervector-lab

before_script:
  - python -m pip install --upgrade pip

test:
  stage: test
  image: python:3.11
  script:
    - pip install -e ".[dev]"
    - python quality_gates_validator.py
    - python -m pytest tests/ -v --cov=hypervector
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -f production_ready/docker/Dockerfile -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  only:
    - main

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl apply -f production_ready/kubernetes/
    - kubectl set image deployment/hypervector-lab hypervector-lab=$DOCKER_IMAGE -n $KUBE_NAMESPACE
    - kubectl rollout status deployment/hypervector-lab -n $KUBE_NAMESPACE
  environment:
    name: production
  only:
    - main
